title: "Explantory ANALYSIS Jiatong"
author: "Jiatong Ding"
format: gfm
---



```{r}
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(dplyr))
ds <- read_rds("dataset/NYPD.rds")
library(tidyverse) 
library(ggplot2)
library(dplyr)
library(kableExtra)
library(ggcorrplot)
library(ggmap)
library(leaflet)
library(patchwork)

ds <- read_rds("dataset/load_and_clean_data.rds") 
```


```{r}
ds|>
  ggplot(aes(x =AGE_GROUP))+ geom_bar()
```
It shows all range of age level in the data, no unusual data.


```{r}
ds|>
count(PERP_SEX)
```


```{r}
ds|> 
  count(PD_DESC)
PD_count <- unique(ds$PD_DESC) # 
length(PD_count)
```
there are 239 subcategories for all 63 crimes


```{r}
category_details <- ds %>%
  group_by(OFNS_DESC) %>%
  summarise(PD_DESC_Details = paste(unique(PD_DESC), split= "", collapse = ", ")) %>%
  ungroup() %>%
  arrange(OFNS_DESC)

print(category_details)
```

```{r echo=F}
library(knitr)
variables_df<- data.frame(
  Variable = c("ARREST_DATE",  "PD_DESC",  "OFNS_DESC", "LAW_CAT_CD", 
              "ARREST_PRECINCT","AGE_GROUP", "PERP_SEX", "PERP_RACE", 
               "X_COORD_CD", "Y_COORD_CD", "Latitude", "Longitude", "Lon_Lat"),
  Data_Types = c("calendar date", "text", "text", 
                 "text", "number","text", "text", "text", 
                 "text", "text", "number", "number", "point"),
  Description = c( 
                  "Exact date of arrest for the reported event", 
 
                  "Description of internal classification corresponding with PD code (more granular than Offense Description)", 
                  
                  "Description of internal classification corresponding with KY code (more general category than PD description)", 
                  "Level of offense: felony, misdemeanor, violation, infraction", 
                  "Precinct where the arrest occurred", 
                  "Perpetrator’s age within a category", 
                  "Perpetrator’s sex description", 
                  "Perpetrator’s race description", 
                  "Midblock X-coordinate for New York State Plane Coordinate System", 
                  "Midblock Y-coordinate for New York State Plane Coordinate System", 
                  "Latitude coordinate for Global Coordinate System", 
                  "Longitude coordinate for Global Coordinate System", 
                  "Georeferenced Point Column based on Longitude and Latitude fields")
)
kable(variables_df, format = "html")
```

```{r echo=FALSE}
ds |>
  count(PERP_SEX) |>
  kable("html") |>
  kable_styling(bootstrap_options = c("striped", "hover"), full_width = F)
```

```{r echo=FALSE}
category_details <- ds |>
  group_by(OFNS_DESC) |>
  summarise(PD_DESC_Details = paste(unique(PD_DESC), collapse = ", ")) |>
  ungroup() |>
  arrange(OFNS_DESC)
category_details |>
  kable(format = "html", escape = F) |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                full_width = F, 
                font_size = 12) |>
  column_spec(1, bold = T, color = "black") |>
  row_spec(0, background = "#D3D3D3") 
```

```{r}
crime_summary <- ds |>
  group_by(OFNS_DESC) |>
  summarize(Incident_Count = n(), .groups = "drop") |>
  arrange(desc(Incident_Count)) |>
  slice_max(Incident_Count, n = 10)

crime_race_summary <- ds |>
  filter(OFNS_DESC %in% crime_summary$OFNS_DESC) |>
  group_by(OFNS_DESC, PERP_RACE) |>
  summarize(Incident_Count = n(), .groups = "drop")

total_counts <- crime_race_summary |>
  group_by(OFNS_DESC) |>
  summarize(Total_Count = sum(Incident_Count), .groups = "drop")

crime_race_summary <- crime_race_summary |>
  left_join(total_counts, by = "OFNS_DESC") |>
  mutate(Proportion = Incident_Count / Total_Count)

ggplot(crime_race_summary, aes(x = reorder(OFNS_DESC, -Proportion), y = Proportion, fill = PERP_RACE)) +
  geom_bar(stat = "identity", position = "fill") +  # Using 'fill' to show proportions
  labs(title = "Proportion of Top 10 Crime Categories by Race",
       x = "Crime Categories",
       y = "Proportion",
       fill = "Race") +
  theme_grey() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1, size = rel(0.8) ))

```


```{r echo =F}
num_data <-ds |>
  select_if(is.numeric)

cor_matrix <- cor(num_data, use ="pairwise.complete.obs")

ggcorrplot(cor_matrix, method ="circle", type= "lower", 
       lab= TRUE,lab_size=4, tl.cex =10, tl.col= "steelblue", title="correlation Matrix of Numeric Variables")
```

```{r echo =F}
crime_counts_by_day <- ds %>%
  mutate(ARREST_DATE = mdy(ARREST_DATE)) %>%  
  count(ARREST_DATE)  
  
crime_counts_by_month <- crime_counts_by_day %>%
  mutate(Month = floor_date(ARREST_DATE, "month")) %>%
  group_by(Month) %>%
  summarize(Monthly_Crime_Count = sum(n), .groups = "drop")

ggplot(crime_counts_by_month, aes(x = Month, y = Monthly_Crime_Count)) +
  geom_col(fill = "steelblue") +  # Use geom_col for bar charts
  labs(title = "Monthly Crime Counts in 2023",
       x = "Month",
       y = "Crime Incidents") +
  scale_x_date(date_labels = "%b", date_breaks = "1 month") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) 
```

```{r echo =F}
crime_counts_by_day <- ds |>
  group_by(ARREST_DATE) |>
  summarize(Daily_Crime_Count = n(), .groups = "drop")
crime_counts_by_day$ARREST_DATE <- as.Date(crime_counts_by_day$ARREST_DATE)

ggplot(crime_counts_by_day, aes(x = ARREST_DATE, y = Daily_Crime_Count)) +
  geom_line() +  # Use geom_line for time series
  geom_point(size = 0.5, color = "blue") +  # Optional: add points on each date
  labs(title = "Daily Crime Counts",
       x = "Date",
       y = "Number of Crimes") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels if necessary
```


```{r}

library(tidyverse)
library(lubridate)
library(sp)
library(sf)
library(maps)
library(ggmap)
register_google(key = 'AIzaSyCt0sZ-6YYL1V_VUw5PwA9jDOaexJR7r_Q', write = TRUE)
register_stadiamaps(key = 'AIzaSyCt0sZ-6YYL1V_VUw5PwA9jDOaexJR7r_Q', write = TRUE)
library(ggsci)
```

```{r}
ds |> dplyr::filter(Latitude > 30, Longitude < -40) -> ds
bbox <- make_bbox(lon = Longitude, lat = Latitude, data = ds, f = 0.1)
a <- get_map(bbox)
ggmap(a)


```


```{r}
ds |> group_by(Longitude, Latitude) |>
  count(name = 'n') %>%
  mutate(G = cut(n, breaks = c(0, 3, 5, 10, 2985),
                 labels = c('<3', '3~5', '5~10', '>10'), 
                 include.lowest = T))-> ds_res
# df_map <- map_data("county", region = "new york")
# head(df_map)
ggmap(a) +
  geom_point(data = ds_res, aes(x = Longitude, y = Latitude, col = G),
             alpha = 0.5, size = 0.5) +
  scale_x_continuous(limits = range(ds$Longitude)) +
  scale_y_continuous(limits = range(ds$Latitude))  +
  labs(x = 'Longitude', y = 'Latitude', col = '') +
  scale_color_manual(values = c('seagreen', 'blue', 'orange', 'tomato')) +
  coord_map() + 
  theme_bw() +
  theme(legend.position = 'top')
range(ds$Longitude)
range(ds$Latitude)

```

```{r}
ds |> group_by(OFNS_DESC) |>
  count(name = 'n') |>
  arrange(desc(n)) |>
  head()

```

```{r}
#  ASSAULT 3 & RELATED OFFENSES
ds |> dplyr::filter(OFNS_DESC == 'ASSAULT 3 & RELATED OFFENSES') |>
  group_by(Longitude, Latitude) |>
  count(name = 'n') |> 
  mutate(G = cut(n, breaks = c(0, 1, 2, 3, 592),
                 labels = c('1', '2', '3', '>3'), 
                 include.lowest = T)) -> df_res1

ggmap(a) +
  coord_map() +
  geom_point(data = df_res1, aes(x = Longitude, y = Latitude, col = G),
             alpha = 0.5, size = 0.5) +
  scale_x_continuous(limits = range(ds$Longitude)) +
  scale_y_continuous(limits = range(ds$Latitude))  +
  labs(x = 'Longitude', y = 'Latitude', col = '', title = 'ASSAULT 3 & RELATED OFFENSES') +
  scale_color_manual(values = c('seagreen', 'blue', 'orange', 'tomato')) +
  theme(legend.position = 'top')

```


```{r include =F}
ds |> dplyr::filter(Latitude > 30, Longitude < -40) -> ds
bbox <- make_bbox(lon = Longitude, lat = Latitude, data = ds, f = 0.1)
a <- get_map(bbox)
ggmap(a)

ds <- ds |> mutate(ARREST_DATE =mdy(ARREST_DATE))
```



```{r echo=FALSE, message=FALSE, warning=FALSE}
#2022 ASSAULT 3

ds |> dplyr::filter(OFNS_DESC == 'ASSAULT 3 & RELATED OFFENSES',
                    ARREST_DATE >= as.Date("2022-01-01") & ARREST_DATE <= as.Date("2022-12-31"))|>
  group_by(Longitude, Latitude) |>
  count(name = 'n') |> 
  mutate(G = cut(n, breaks = c(0, 1, 2, 3, 1523),
                 labels = c('1', '2', '3', '>3'), 
                 include.lowest = T)) -> df_22as

plot_2022as<- ggmap(a) +
  geom_point(data = df_22as, aes(x = Longitude, y = Latitude, color = G),
             alpha = 0.5, size = 0.5) +
  labs(x = 'Longitude', y = 'Latitude', color = '', title = 'ASSAULT 3 2022') +
  scale_color_manual(values = c('seagreen', 'blue', 'orange', 'tomato')) +
  theme(legend.position = 'top')
```



```{r echo=FALSE, message=FALSE, warning=FALSE}
# 2023 ASSAULT 3

ds |> dplyr::filter(OFNS_DESC == 'ASSAULT 3 & RELATED OFFENSES',
                    ARREST_DATE >= as.Date("2023-01-01") & ARREST_DATE <=  as.Date("2023-12-31"))|>
  group_by(Longitude, Latitude) |>
  count(name = 'n') |> 
  mutate(G = cut(n, breaks = c(0, 1, 2, 3, 1523),
                 labels = c('1', '2', '3', '>3'), 
                 include.lowest = T)) -> df_23as

plot_2023as <- ggmap(a) +
  geom_point(data = df_23as, aes(x = Longitude, y = Latitude, color = G),
             alpha = 0.5, size = 0.5) +
  labs(x = 'Longitude', y = 'Latitude', color = '', title = 'ASSAULT 3 2023') +
  scale_color_manual(values = c('seagreen', 'blue', 'orange', 'tomato')) +
  theme(legend.position = 'top')

```

```{r echo=FALSE, message=FALSE, warning=FALSE}
combined_plot <- plot_2022as + plot_2023as
combined_plot
```


```{r}
# 2023 ASSAULT 3 S

ds |> dplyr::filter(OFNS_DESC == 'ASSAULT 3 & RELATED OFFENSES',
                    ARREST_DATE >= as.Date("2023-03-01") & ARREST_DATE <=  as.Date("2023-5-31"))|>
  group_by(Longitude, Latitude) |>
  count(name = 'n') |> 
  mutate(G = cut(n, breaks = c(0, 1, 2, 3, 1523),
                 labels = c('1', '2', '3', '>3'), 
                 include.lowest = T)) -> df_23ass

plot_2023ass <- ggmap(a) +
  geom_point(data = df_23ass, aes(x = Longitude, y = Latitude, color = G),
             alpha = 0.5, size = 0.5) +
  labs(x = 'Longitude', y = 'Latitude', color = '', title = 'ASSAULT 3 2023 S') +
  scale_color_manual(values = c('seagreen', 'blue', 'orange', 'tomato')) +
  theme(legend.position = 'top')


#ASS 3 2023 F

ds |> dplyr::filter(OFNS_DESC == 'ASSAULT 3 & RELATED OFFENSES',
                    ARREST_DATE >= as.Date("2022-9-01") & ARREST_DATE <=  as.Date("2022-10-30"))|>
  group_by(Longitude, Latitude) |>
  count(name = 'n') |> 
  mutate(G = cut(n, breaks = c(0, 1, 2, 3, 1523),
                 labels = c('1', '2', '3', '>3'), 
                 include.lowest = T)) -> df_23asf
plot_2023asf<- ggmap(a) +
  geom_point(data = df_23asf, aes(x = Longitude, y = Latitude, color = G),
             alpha = 0.5, size = 0.5) +
  labs(x = 'Longitude', y = 'Latitude', color = '', title = 'ASSAULT 3 2022f') +
  scale_color_manual(values = c('seagreen', 'blue', 'orange', 'tomato')) +
  theme(legend.position = 'top')


```

```{r}
combined_plot_season <- plot_2023ass + plot_2023asf
combined_plot_season
```

```{r echo=FALSE, message=FALSE, warning=FALSE}
# PETIT LARCENY 2022
ds |> dplyr::filter(OFNS_DESC == 'PETIT LARCENY',
                    ARREST_DATE >= as.Date("2022-01-01") & 
                    ARREST_DATE <=    as.Date("2022-12-31"))|>
  group_by(Longitude, Latitude) |>
  count(name = 'n') |> 
  mutate(G = cut(n, breaks = c(0, 1, 2, 3, 1523),
                 labels = c('1', '2', '3', '>3'), 
                 include.lowest = T)) -> df_res_pt22

plot_2022pt <- ggmap(a) +
  geom_point(data = df_res_pt22, aes(x = Longitude, y = Latitude, color = G),
             alpha = 0.5, size = 0.5) +
  labs(x = 'Longitude', y = 'Latitude', color = '', title = 'PETIT LARCENY 2022') +
  scale_color_manual(values = c('seagreen', 'blue', 'orange', 'tomato')) +
  theme(legend.position = 'top')
```

```{r echo=FALSE, message=FALSE, warning=FALSE}
# PETIT LARCENY 2023
ds |> dplyr::filter(OFNS_DESC == 'PETIT LARCENY',
                    ARREST_DATE >= as.Date("2023-01-01") & ARREST_DATE <= as.Date("2023-12-31"))|>
  group_by(Longitude, Latitude) |>
  count(name = 'n') |> 
  mutate(G = cut(n, breaks = c(0, 1, 2, 3, 1523),
                 labels = c('1', '2', '3', '>3'), 
                 include.lowest = T)) -> df_res_pt23

plot_2023pt <- ggmap(a) +
  geom_point(data = df_res_pt23, aes(x = Longitude, y = Latitude, color = G),
             alpha = 0.5, size = 0.5) +
  labs(x = 'Longitude', y = 'Latitude', color = '', title = 'PETIT LARCENY 2023') +
  scale_color_manual(values = c('seagreen', 'blue', 'orange', 'tomato')) +
  theme(legend.position = 'top')
```

```{r echo=FALSE, message=FALSE, warning=FALSE}
combined_plot_2 <- plot_2022pt + plot_2023pt
combined_plot_2
```

```{r echo=FALSE, message=FALSE, warning=FALSE}
#2022 FA
ds |> dplyr::filter(OFNS_DESC == 'FELONY ASSAULT',
                    ARREST_DATE >= as.Date("2022-01-01") & ARREST_DATE <= as.Date("2022-12-31")) |>
  group_by(Longitude, Latitude) |>
  count(name = 'n') |> 
  mutate(G = cut(n, breaks = c(0, 1, 2, 3, 511),
                 labels = c('1', '2', '3', '>3'), 
                 include.lowest = T)) -> df_fa22

plot_2022fa <- ggmap(a) +
  geom_point(data = df_fa22, aes(x = Longitude, y = Latitude, color = G),
             alpha = 0.5, size = 0.5) +
  labs(x = 'Longitude', y = 'Latitude', color = '', title = 'FELONY ASSAULT 2022') +
  scale_color_manual(values = c('seagreen', 'blue', 'orange', 'tomato')) +
  theme(legend.position = 'top')
```

```{r echo=FALSE, message=FALSE, warning=FALSE}
#2023 FA
ds |> dplyr::filter(OFNS_DESC == 'FELONY ASSAULT',
                    ARREST_DATE >= as.Date("2023-01-01") & ARREST_DATE <= as.Date("2023-12-31")) |>
  group_by(Longitude, Latitude) |>
  count(name = 'n') |> 
  mutate(G = cut(n, breaks = c(0, 1, 2, 3, 511),
                 labels = c('1', '2', '3', '>3'), 
                 include.lowest = T)) -> df_fa23

plot_2023fa <- ggmap(a) +
  geom_point(data = df_fa23, aes(x = Longitude, y = Latitude, color = G),
             alpha = 0.5, size = 0.5) +
  labs(x = 'Longitude', y = 'Latitude', color = '', title = 'FELONY ASSAULT 2023') +
  scale_color_manual(values = c('seagreen', 'blue', 'orange', 'tomato')) +
  theme(legend.position = 'top')
```

```{r echo=FALSE, message=FALSE, warning= FALSE}
combined_plot_3 <- plot_2022fa + plot_2023fa
combined_plot_3
```
