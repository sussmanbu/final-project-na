title: "Explantory ANALYSIS Jiatong"
author: "Jiatong Ding"
format: gfm
---



```{r}
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(dplyr))
ds <- read_rds("dataset/NYPD.rds")
library(tidyverse) 
library(ggplot2)
library(dplyr)
library(kableExtra)
library(ggcorrplot)
library(ggmap)
library(leaflet)
```
```


```{r}
ds|>
  ggplot(aes(x =AGE_GROUP))+ geom_bar()
```
It shows all range of age level in the data, no unusual data.


```{r}
ds|>
count(PERP_SEX)
```


```{r}
ds|> 
  count(PD_DESC)
PD_count <- unique(ds$PD_DESC) # 
length(PD_count)
```
there are 239 subcategories for all 63 crimes


```{r}
category_details <- ds %>%
  group_by(OFNS_DESC) %>%
  summarise(PD_DESC_Details = paste(unique(PD_DESC), split= "", collapse = ", ")) %>%
  ungroup() %>%
  arrange(OFNS_DESC)

print(category_details)
```

```{r echo=F}
library(knitr)
variables_df <- data.frame(
  Variable = c("ARREST_DATE",  "PD_DESC",  "OFNS_DESC", "LAW_CAT_CD", 
              "ARREST_PRECINCT","AGE_GROUP", "PERP_SEX", "PERP_RACE", 
               "X_COORD_CD", "Y_COORD_CD", "Latitude", "Longitude", "Lon_Lat"),
  Data_Types = c("calendar date", "text", "text", 
                 "text", "number","text", "text", "text", 
                 "text", "text", "number", "number", "point"),
  Description = c( 
                  "Exact date of arrest for the reported event", 
 
                  "Description of internal classification corresponding with PD code (more granular than Offense Description)", 
                  
                  "Description of internal classification corresponding with KY code (more general category than PD description)", 
                  "Level of offense: felony, misdemeanor, violation, infraction", 
                  "Precinct where the arrest occurred", 
                  "Perpetrator’s age within a category", 
                  "Perpetrator’s sex description", 
                  "Perpetrator’s race description", 
                  "Midblock X-coordinate for New York State Plane Coordinate System", 
                  "Midblock Y-coordinate for New York State Plane Coordinate System", 
                  "Latitude coordinate for Global Coordinate System", 
                  "Longitude coordinate for Global Coordinate System", 
                  "Georeferenced Point Column based on Longitude and Latitude fields")
)
kable(variables_df, format = "html")
```

```{r echo=FALSE}
ds |>
  count(PERP_SEX) |>
  kable("html") |>
  kable_styling(bootstrap_options = c("striped", "hover"), full_width = F)
```

```{r echo=FALSE}
category_details <- ds |>
  group_by(OFNS_DESC) |>
  summarise(PD_DESC_Details = paste(unique(PD_DESC), collapse = ", ")) |>
  ungroup() |>
  arrange(OFNS_DESC)
category_details |>
  kable(format = "html", escape = F) |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                full_width = F, 
                font_size = 12) |>
  column_spec(1, bold = T, color = "black") |>
  row_spec(0, background = "#D3D3D3") 
```

```{r}
crime_summary <- ds |>
  group_by(OFNS_DESC) |>
  summarize(Incident_Count = n(), .groups = "drop") |>
  arrange(desc(Incident_Count)) |>
  slice_max(Incident_Count, n = 10)

crime_race_summary <- ds |>
  filter(OFNS_DESC %in% crime_summary$OFNS_DESC) |>
  group_by(OFNS_DESC, PERP_RACE) |>
  summarize(Incident_Count = n(), .groups = "drop")

total_counts <- crime_race_summary |>
  group_by(OFNS_DESC) |>
  summarize(Total_Count = sum(Incident_Count), .groups = "drop")

crime_race_summary <- crime_race_summary |>
  left_join(total_counts, by = "OFNS_DESC") |>
  mutate(Proportion = Incident_Count / Total_Count)

ggplot(crime_race_summary, aes(x = reorder(OFNS_DESC, -Proportion), y = Proportion, fill = PERP_RACE)) +
  geom_bar(stat = "identity", position = "fill") +  # Using 'fill' to show proportions
  labs(title = "Proportion of Top 10 Crime Categories by Race",
       x = "Crime Categories",
       y = "Proportion",
       fill = "Race") +
  theme_grey() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1, size = rel(0.8) ))

```


```{r echo =F}
num_data <-ds |>
  select_if(is.numeric)

cor_matrix <- cor(num_data, use ="pairwise.complete.obs")

ggcorrplot(cor_matrix, method ="circle", type= "lower", 
       lab= TRUE,lab_size=4, tl.cex =10, tl.col= "steelblue", title="correlation Matrix of Numeric Variables")
```

```{r echo =F}
crime_counts_by_day <- ds %>%
  mutate(ARREST_DATE = mdy(ARREST_DATE)) %>%  
  count(ARREST_DATE)  
  
crime_counts_by_month <- crime_counts_by_day %>%
  mutate(Month = floor_date(ARREST_DATE, "month")) %>%
  group_by(Month) %>%
  summarize(Monthly_Crime_Count = sum(n), .groups = "drop")

ggplot(crime_counts_by_month, aes(x = Month, y = Monthly_Crime_Count)) +
  geom_col(fill = "steelblue") +  # Use geom_col for bar charts
  labs(title = "Monthly Crime Counts in 2023",
       x = "Month",
       y = "Crime Incidents") +
  scale_x_date(date_labels = "%b", date_breaks = "1 month") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) 
```

```{r echo =F}
crime_counts_by_day <- ds |>
  group_by(ARREST_DATE) |>
  summarize(Daily_Crime_Count = n(), .groups = "drop")
crime_counts_by_day$ARREST_DATE <- as.Date(crime_counts_by_day$ARREST_DATE)

ggplot(crime_counts_by_day, aes(x = ARREST_DATE, y = Daily_Crime_Count)) +
  geom_line() +  # Use geom_line for time series
  geom_point(size = 0.5, color = "blue") +  # Optional: add points on each date
  labs(title = "Daily Crime Counts",
       x = "Date",
       y = "Number of Crimes") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels if necessary
```
