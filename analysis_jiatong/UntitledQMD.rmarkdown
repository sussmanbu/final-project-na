title: "Explantory ANALYSIS Jiatong"
author: "Jiatong Ding"
format: gfm

---



```{r}
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(dplyr))
ds <- read_rds("dataset/NYPD.rds")
library(tidyverse) 
library(ggplot2)
library(dplyr)
library(kableExtra)
library(ggcorrplot)
library(ggmap)
library(leaflet)
library(patchwork)

ds <- read_rds("dataset/load_and_clean_data.rds") 
```


```{r}
ds|>
  ggplot(aes(x =AGE_GROUP))+ geom_bar()
```
It shows all range of age level in the data, no unusual data.


```{r}
ds|>
count(PERP_SEX)
```


```{r}
ds|> 
  count(PD_DESC)
PD_count <- unique(ds$PD_DESC) # 
length(PD_count)
```
there are 239 subcategories for all 63 crimes


```{r}
category_details <- ds %>%
  group_by(OFNS_DESC) %>%
  summarise(PD_DESC_Details = paste(unique(PD_DESC), split= "", collapse = ", ")) %>%
  ungroup() %>%
  arrange(OFNS_DESC)

print(category_details)
```

```{r echo=F}
library(knitr)
variables_df<- data.frame(
  Variable = c("ARREST_DATE",  "PD_DESC",  "OFNS_DESC", "LAW_CAT_CD", 
              "ARREST_PRECINCT","AGE_GROUP", "PERP_SEX", "PERP_RACE", 
               "X_COORD_CD", "Y_COORD_CD", "Latitude", "Longitude", "Lon_Lat"),
  Data_Types = c("calendar date", "text", "text", 
                 "text", "number","text", "text", "text", 
                 "text", "text", "number", "number", "point"),
  Description = c( 
                  "Exact date of arrest for the reported event", 
 
                  "Description of internal classification corresponding with PD code (more granular than Offense Description)", 
                  
                  "Description of internal classification corresponding with KY code (more general category than PD description)", 
                  "Level of offense: felony, misdemeanor, violation, infraction", 
                  "Precinct where the arrest occurred", 
                  "Perpetrator’s age within a category", 
                  "Perpetrator’s sex description", 
                  "Perpetrator’s race description", 
                  "Midblock X-coordinate for New York State Plane Coordinate System", 
                  "Midblock Y-coordinate for New York State Plane Coordinate System", 
                  "Latitude coordinate for Global Coordinate System", 
                  "Longitude coordinate for Global Coordinate System", 
                  "Georeferenced Point Column based on Longitude and Latitude fields")
)
kable(variables_df, format = "html")
```

```{r echo=FALSE}
ds |>
  count(PERP_SEX) |>
  kable("html") |>
  kable_styling(bootstrap_options = c("striped", "hover"), full_width = F)
```

```{r echo=FALSE}
category_details <- ds |>
  group_by(OFNS_DESC) |>
  summarise(PD_DESC_Details = paste(unique(PD_DESC), collapse = ", ")) |>
  ungroup() |>
  arrange(OFNS_DESC)
category_details |>
  kable(format = "html", escape = F) |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                full_width = F, 
                font_size = 12) |>
  column_spec(1, bold = T, color = "black") |>
  row_spec(0, background = "#D3D3D3") 
```

```{r}
crime_summary <- ds |>
  group_by(OFNS_DESC) |>
  summarize(Incident_Count = n(), .groups = "drop") |>
  arrange(desc(Incident_Count)) |>
  slice_max(Incident_Count, n = 10)

crime_race_summary <- ds |>
  filter(OFNS_DESC %in% crime_summary$OFNS_DESC) |>
  group_by(OFNS_DESC, PERP_RACE) |>
  summarize(Incident_Count = n(), .groups = "drop")

total_counts <- crime_race_summary |>
  group_by(OFNS_DESC) |>
  summarize(Total_Count = sum(Incident_Count), .groups = "drop")

crime_race_summary <- crime_race_summary |>
  left_join(total_counts, by = "OFNS_DESC") |>
  mutate(Proportion = Incident_Count / Total_Count)

ggplot(crime_race_summary, aes(x = reorder(OFNS_DESC, -Proportion), y = Proportion, fill = PERP_RACE)) +
  geom_bar(stat = "identity", position = "fill") +  # Using 'fill' to show proportions
  labs(title = "Proportion of Top 10 Crime Categories by Race",
       x = "Crime Categories",
       y = "Proportion",
       fill = "Race") +
  theme_grey() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1, size = rel(0.8) ))

```


```{r echo =F}
num_data <-ds |>
  select_if(is.numeric)

cor_matrix <- cor(num_data, use ="pairwise.complete.obs")

ggcorrplot(cor_matrix, method ="circle", type= "lower", 
       lab= TRUE,lab_size=4, tl.cex =10, tl.col= "steelblue", title="correlation Matrix of Numeric Variables")
```

```{r echo =F}
crime_counts_by_day <- ds %>%
  mutate(ARREST_DATE = mdy(ARREST_DATE)) %>%  
  count(ARREST_DATE)  
  
crime_counts_by_month <- crime_counts_by_day %>%
  mutate(Month = floor_date(ARREST_DATE, "month")) %>%
  group_by(Month) %>%
  summarize(Monthly_Crime_Count = sum(n), .groups = "drop")

ggplot(crime_counts_by_month, aes(x = Month, y = Monthly_Crime_Count)) +
  geom_col(fill = "steelblue") +  # Use geom_col for bar charts
  labs(title = "Monthly Crime Counts in 2023",
       x = "Month",
       y = "Crime Incidents") +
  scale_x_date(date_labels = "%b", date_breaks = "1 month") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) 
```

```{r echo =F}
crime_counts_by_day <- ds |>
  group_by(ARREST_DATE) |>
  summarize(Daily_Crime_Count = n(), .groups = "drop")
crime_counts_by_day$ARREST_DATE <- as.Date(crime_counts_by_day$ARREST_DATE)

ggplot(crime_counts_by_day, aes(x = ARREST_DATE, y = Daily_Crime_Count)) +
  geom_line() +  # Use geom_line for time series
  geom_point(size = 0.5, color = "blue") +  # Optional: add points on each date
  labs(title = "Daily Crime Counts",
       x = "Date",
       y = "Number of Crimes") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels if necessary
```
```{r include=FALSE}
library(dplyr)
library(tidyverse) 
library(ggplot2)
library(dplyr)
library(kableExtra)
library(ggcorrplot)
library(ggmap)
library(leaflet)
library(patchwork)
library(tigris)
library(sp)
library(sf)
library(data.table)
library(lubridate)
library(gridExtra)

ds <- read_rds("dataset/load_and_clean_data.rds")
```



We found that when season changes from summer to winter, the crime density gradually decreases.

```{r echo=FALSE, message=FALSE, warning= FALSE}
ds <- readRDS("dataset/load_and_clean_data.rds")
ds <- as.data.table(ds)
ds$ARREST_DATE <- ymd(ds$ARREST_DATE)
ds$ARREST_month <- month(ds$ARREST_DATE)

ds_sub <- ds[OFNS_DESC == "ASSAULT 3 & RELATED OFFENSES",]
ds_sub_winter <- ds[OFNS_DESC == "ASSAULT 3 & RELATED OFFENSES"&ARREST_month %in%c(1,2,12) ,]
ds_sub_summer <- ds[OFNS_DESC == "ASSAULT 3 & RELATED OFFENSES"&ARREST_month %in%c(6,7,8) ,]
ds_sub_low <-ds[OFNS_DESC == "ASSAULT 3 & RELATED OFFENSES"& temp<14.8 ,]
ds_sub_high <-ds[OFNS_DESC == "ASSAULT 3 & RELATED OFFENSES"& temp>14.8 ,]
ds_sub_spring <-ds[OFNS_DESC == "ASSAULT 3 & RELATED OFFENSES"& ARREST_month %in%c(3,4,5) ,]
ds_sub_fall <- ds[OFNS_DESC == "ASSAULT 3 & RELATED OFFENSES"&ARREST_month %in%c(9,10,11) ,]


ds_plot <- ds_sub[,.(count = .N),ARREST_PRECINCT ]
ds_plot_winter <- ds_sub_winter[,.(count = .N),ARREST_PRECINCT ]
ds_plot_summer <-ds_sub_summer[,.(count = .N),ARREST_PRECINCT ]
ds_plot_low <- ds_sub_low[,.(count = .N),ARREST_PRECINCT ]
ds_plot_high <- ds_sub_high[,.(count = .N),ARREST_PRECINCT ]
ds_plot_spring <-ds_sub_spring[,.(count = .N),ARREST_PRECINCT ]
ds_plot_fall <-ds_sub_fall[,.(count = .N),ARREST_PRECINCT ]

map_data <- st_read("dataset/geo_export_87553334-fdcd-4d0c-8ab2-43a5e2975733.shp")
map_data <-as(map_data, "Spatial")
map_data_all <- sp::merge(map_data,ds_plot,by.x = "precinct",by.y ="ARREST_PRECINCT",all.x = T)
map_data_winter <- sp::merge(map_data,ds_plot_winter,by.x = "precinct",by.y ="ARREST_PRECINCT",all.x = T)
map_data_summer <- sp::merge(map_data,ds_plot_summer,by.x = "precinct",by.y ="ARREST_PRECINCT",all.x = T)
map_data_low <- sp::merge(map_data,ds_plot_low,by.x = "precinct",by.y ="ARREST_PRECINCT",all.x = T)
map_data_high <- sp::merge(map_data,ds_plot_high,by.x = "precinct",by.y ="ARREST_PRECINCT",all.x = T)
map_data_spring <- sp::merge(map_data,ds_plot_spring,by.x = "precinct",by.y ="ARREST_PRECINCT",all.x = T)
map_data_fall <- sp::merge(map_data,ds_plot_fall,by.x = "precinct",by.y ="ARREST_PRECINCT",all.x = T)

map_data_all <- as(map_data_all, "sf")
map_data_winter <- as(map_data_winter, "sf")
map_data_summer <-as(map_data_summer, "sf")
map_data_low <-as(map_data_low, "sf")
map_data_high  <-as(map_data_high , "sf")
map_data_spring <-as(map_data_spring , "sf")
map_data_fall <- as(map_data_fall , "sf")

```


```{r echo=FALSE, message=FALSE, warning= FALSE}
ggplot()+
  geom_sf(data = map_data_all,colour = "gray60",size = 0.1,aes(fill = count) )+
  # scale_fill_continuous(low = "#FF9797", high = "#600000",na.value="white")+
  scale_fill_distiller(palette = "YlOrRd",direction= 1) +
  #scale_fill_manual(palette = "YlOrRd")+
  theme( axis.ticks=element_blank(), 
         axis.title=element_blank(), 
         panel.border = element_blank(), 
         axis.text=element_blank() , 
         panel.background = element_blank()
         
  )+ggtitle("ALL YEAR")+
  theme(plot.title = element_text(hjust = 0.5))
```

```{r echo=FALSE, message=FALSE, warning= FALSE}
winter<- ggplot()+
  geom_sf(data = map_data_winter,colour = "gray60",size = 0.1,aes(fill = count) )+
  # scale_fill_continuous(low = "#FF9797", high = "#600000",na.value="white")+
  scale_fill_distiller(palette = "YlOrRd",direction= 1) +
  #scale_fill_manual(palette = "YlOrRd")+
  theme( axis.ticks=element_blank(), 
         axis.title=element_blank(), 
         panel.border = element_blank(), 
         axis.text=element_blank() , 
         panel.background = element_blank()
         
  )+ggtitle("winter")+
  theme(plot.title = element_text(hjust = 0.5))
```


```{r echo=FALSE, message=FALSE, warning= FALSE}
summer<- ggplot()+
  geom_sf(data = map_data_summer,colour = "gray60",size = 0.1,aes(fill = count) )+
  # scale_fill_continuous(low = "#FF9797", high = "#600000",na.value="white")+
  scale_fill_distiller(palette = "YlOrRd",direction= 1) +
  #scale_fill_manual(palette = "YlOrRd")+
  theme( axis.ticks=element_blank(), 
         axis.title=element_blank(), 
         panel.border = element_blank(), 
         axis.text=element_blank() , 
         panel.background = element_blank()
         
  )+ggtitle("summer")+
  theme(plot.title = element_text(hjust = 0.5))
```

```{r echo=FALSE, message=FALSE, warning= FALSE}
ggplot()+
  geom_sf(data = map_data_low,colour = "gray60",size = 0.1,aes(fill = count) )+
  # scale_fill_continuous(low = "#FF9797", high = "#600000",na.value="white")+
  scale_fill_distiller(palette = "YlOrRd",direction= 1) +
  #scale_fill_manual(palette = "YlOrRd")+
  theme( axis.ticks=element_blank(), 
         axis.title=element_blank(), 
         panel.border = element_blank(), 
         axis.text=element_blank() , 
         panel.background = element_blank()
         
  )+ggtitle("low")+
  theme(plot.title = element_text(hjust = 0.5))

```

```{r echo=FALSE, message=FALSE, warning= FALSE}
ggplot()+
  geom_sf(data = map_data_high,colour = "gray60",size = 0.1,aes(fill = count) )+
  # scale_fill_continuous(low = "#FF9797", high = "#600000",na.value="white")+
  scale_fill_distiller(palette = "YlOrRd",direction= 1) +
  #scale_fill_manual(palette = "YlOrRd")+
  theme( axis.ticks=element_blank(), 
         axis.title=element_blank(), 
         panel.border = element_blank(), 
         axis.text=element_blank() , 
         panel.background = element_blank()
         
  )+ggtitle("high")+
  theme(plot.title = element_text(hjust = 0.5))
```

```{r echo=FALSE, message=FALSE, warning= FALSE}
map_data_all$count_new<-cut(map_data_all$count
                            ,breaks=c(-Inf,200,400,600,800,1000,Inf)
                            ,labels = c(
                              "[0,200 )"
                              ,"[200,400)"
                              ,"[400,600)"
                              ,"[600,800)"
                              ,"[800,1000)"
                              ,"[1000+)"
                              
                            ))
ggplot()+
  geom_sf(data = map_data_all,colour = "gray60",size = 0.1,aes(fill = count_new) )+
  # scale_fill_continuous(low = "#FF9797", high = "#600000",na.value="white")+
  scale_fill_brewer(palette = "YlOrRd")+
  #scale_fill_manual(palette = "YlOrRd")+
  theme( axis.ticks=element_blank(), 
         axis.title=element_blank(), 
         panel.border = element_blank(), 
         axis.text=element_blank() , 
         panel.background = element_blank()
         
  )+ggtitle("All year")+
  theme(plot.title = element_text(hjust = 0.5))

```

```{r echo=FALSE, message=FALSE, warning= FALSE}
map_data_winter$count_new<-cut(map_data_winter$count
                            ,breaks=c(-Inf,50,100,150,200,250,300,Inf)
                            ,labels = c(
                              "[0,50 )"
                              ,"[50,100)"
                              ,"[100,150)"
                              ,"[150,200)"
                              ,"[200,250)"
                              ,"[250,300)"
                              ,"[300+)"
                              
                              
                            ))

winter <-ggplot()+
  geom_sf(data = map_data_winter,colour = "gray60",size = 0.1,aes(fill = count_new) )+
  # scale_fill_continuous(low = "#FF9797", high = "#600000",na.value="white")+
  scale_fill_brewer(palette = "YlOrRd")+
  #scale_fill_manual(palette = "YlOrRd")+
  theme( axis.ticks=element_blank(), 
         axis.title=element_blank(), 
         panel.border = element_blank(), 
         axis.text=element_blank() , 
         panel.background = element_blank()
         
  )+ggtitle("Winter")+
  theme(plot.title = element_text(hjust = 0.5))
```

```{r echo=FALSE, message=FALSE, warning= FALSE}
map_data_summer$count_new<-cut(map_data_summer$count
                            ,breaks=c(-Inf,50,100,150,200,250,300,Inf)
                            ,labels = c(
                              "[0,50 )"
                              ,"[50,100)"
                              ,"[100,150)"
                              ,"[150,200)"
                              ,"[200,250)"
                              ,"[250,300)"
                              ,"[300+)"
                              
                            ))

summer<-ggplot()+
  geom_sf(data = map_data_summer,colour = "gray60",size = 0.1,aes(fill = count_new) )+
  # scale_fill_continuous(low = "#FF9797", high = "#600000",na.value="white")+
  scale_fill_brewer(palette = "YlOrRd")+
  #scale_fill_manual(palette = "YlOrRd")+
  theme( axis.ticks=element_blank(), 
         axis.title=element_blank(), 
         panel.border = element_blank(), 
         axis.text=element_blank() , 
         panel.background = element_blank()
         
  )+ggtitle("Summer")+
  theme(plot.title = element_text(hjust = 0.5))
```

```{r echo=FALSE, message=FALSE, warning= FALSE}
map_data_spring$count_new<-cut(map_data_spring$count
                            ,breaks=c(-Inf,50,100,150,200,250,300,Inf)
                            ,labels = c(
                              "[0,50 )"
                              ,"[50,100)"
                              ,"[100,150)"
                              ,"[150,200)"
                              ,"[200,250)"
                              ,"[250,300)"
                              ,"[300+)"
                              
                            ))

spring<-ggplot()+
  geom_sf(data = map_data_spring,colour = "gray60",size = 0.1,aes(fill = count_new) )+
  # scale_fill_continuous(low = "#FF9797", high = "#600000",na.value="white")+
  scale_fill_brewer(palette = "YlOrRd")+
  #scale_fill_manual(palette = "YlOrRd")+
  theme( axis.ticks=element_blank(), 
         axis.title=element_blank(), 
         panel.border = element_blank(), 
         axis.text=element_blank() , 
         panel.background = element_blank()
         
  )+ggtitle("Spring")+
  theme(plot.title = element_text(hjust = 0.5))
```


```{r echo=FALSE, message=FALSE, warning= FALSE}
map_data_fall$count_new<-cut(map_data_fall$count
                            ,breaks=c(-Inf,50,100,150,200,250,300,Inf)
                            ,labels = c(
                              "[0,50 )"
                              ,"[50,100)"
                              ,"[100,150)"
                              ,"[150,200)"
                              ,"[200,250)"
                              ,"[250,300)"
                              ,"[300+)"
                              
                            ))

fall<-ggplot()+
  geom_sf(data = map_data_fall,colour = "gray60",size = 0.1,aes(fill = count_new) )+
  # scale_fill_continuous(low = "#FF9797", high = "#600000",na.value="white")+
  scale_fill_brewer(palette = "YlOrRd")+
  #scale_fill_manual(palette = "YlOrRd")+
  theme( axis.ticks=element_blank(), 
         axis.title=element_blank(), 
         panel.border = element_blank(), 
         axis.text=element_blank() , 
         panel.background = element_blank()
         
  )+ggtitle("Fall")+
  theme(plot.title = element_text(hjust = 0.5))
```

```{r echo=FALSE, message=FALSE, warning= FALSE}
grid.arrange(spring, fall, summer, winter, ncol = 2, nrow = 2)
```


















